{"ast":null,"code":"import _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\nvar evaluateProps = function (props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, _assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, _assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n  var modifiedProps = _assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n  return modifiedProps;\n};\nvar usePreviousValue = function (value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport var CanvasBar = function (props) {\n  var _useCanvasContext = useCanvasContext(),\n    canvasRef = _useCanvasContext.canvasRef;\n  var modifiedProps = evaluateProps(props);\n  var polar = modifiedProps.polar,\n    style = modifiedProps.style,\n    barWidth = modifiedProps.barWidth,\n    cornerRadius = modifiedProps.cornerRadius,\n    origin = modifiedProps.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(modifiedProps, cornerRadius) : getBarPath(modifiedProps, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, modifiedProps]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n    if (polar) {\n      ctx.translate((origin === null || origin === void 0 ? void 0 : origin.x) || 0, (origin === null || origin === void 0 ? void 0 : origin.y) || 0);\n    }\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]); // This will clear the previous bar without clearing the entire canvas\n\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save(); // This ensures that the entire shape is erased\n\n      var strokeWidth = style.strokeWidth || 0;\n      ctx.lineWidth = strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var _canvasRef$current;\n    var ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext(\"2d\");\n    if (!ctx) return;\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, modifiedProps, path2d, clearPreviousPath]);\n  return null;\n};","map":{"version":3,"names":["_assign","React","getBarPath","getBarWidth","getCornerRadius","getPolarBarPath","getStyle","useCanvasContext","evaluateProps","props","style","barWidth","cornerRadius","modifiedProps","usePreviousValue","value","ref","useRef","useEffect","current","CanvasBar","_useCanvasContext","canvasRef","polar","origin","path2d","useMemo","p","Path2D","previousPath","draw","useCallback","ctx","path","fillStyle","fill","strokeStyle","stroke","globalAlpha","fillOpacity","lineWidth","strokeWidth","translate","x","y","setTransform","clearPreviousPath","save","globalCompositeOperation","restore","_canvasRef$current","getContext"],"sources":["C:/Users/romeo/OneDrive/Bureau/OneGoal/frontend/node_modules/victory-canvas/es/canvas-bar.js"],"sourcesContent":["import _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\n\nvar evaluateProps = function (props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, _assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, _assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n\n  var modifiedProps = _assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n\n  return modifiedProps;\n};\n\nvar usePreviousValue = function (value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport var CanvasBar = function (props) {\n  var _useCanvasContext = useCanvasContext(),\n      canvasRef = _useCanvasContext.canvasRef;\n\n  var modifiedProps = evaluateProps(props);\n  var polar = modifiedProps.polar,\n      style = modifiedProps.style,\n      barWidth = modifiedProps.barWidth,\n      cornerRadius = modifiedProps.cornerRadius,\n      origin = modifiedProps.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(modifiedProps, cornerRadius) : getBarPath(modifiedProps, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, modifiedProps]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n\n    if (polar) {\n      ctx.translate((origin === null || origin === void 0 ? void 0 : origin.x) || 0, (origin === null || origin === void 0 ? void 0 : origin.y) || 0);\n    }\n\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]); // This will clear the previous bar without clearing the entire canvas\n\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save(); // This ensures that the entire shape is erased\n\n      var strokeWidth = style.strokeWidth || 0;\n      ctx.lineWidth = strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var _canvasRef$current;\n\n    var ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext(\"2d\");\n    if (!ctx) return;\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, modifiedProps, path2d, clearPreviousPath]);\n  return null;\n};"],"mappings":"AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,aAAa;AACjG,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,IAAIC,aAAa,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACnC;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,KAAK,GAAGJ,QAAQ,CAACG,KAAK,CAACC,KAAK,EAAED,KAAK,CAAC;EACxC,IAAIE,QAAQ,GAAGR,WAAW,CAACM,KAAK,CAACE,QAAQ,EAAEX,OAAO,CAAC,CAAC,CAAC,EAAES,KAAK,EAAE;IAC5DC,KAAK,EAAEA;EACT,CAAC,CAAC,CAAC;EACH,IAAIE,YAAY,GAAGR,eAAe,CAACK,KAAK,CAACG,YAAY,EAAEZ,OAAO,CAAC,CAAC,CAAC,EAAES,KAAK,EAAE;IACxEC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;EAEH,IAAIE,aAAa,GAAGb,OAAO,CAAC,CAAC,CAAC,EAAES,KAAK,EAAE;IACrCC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA,QAAQ;IAClBC,YAAY,EAAEA;EAChB,CAAC,CAAC;EAEF,OAAOC,aAAa;AACtB,CAAC;AAED,IAAIC,gBAAgB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACtC,IAAIC,GAAG,GAAGf,KAAK,CAACgB,MAAM,CAAC,CAAC;EACxBhB,KAAK,CAACiB,SAAS,CAAC,YAAY;IAC1BF,GAAG,CAACG,OAAO,GAAGJ,KAAK;EACrB,CAAC,CAAC;EACF,OAAOC,GAAG,CAACG,OAAO;AACpB,CAAC;AAED,OAAO,IAAIC,SAAS,GAAG,SAAAA,CAAUX,KAAK,EAAE;EACtC,IAAIY,iBAAiB,GAAGd,gBAAgB,CAAC,CAAC;IACtCe,SAAS,GAAGD,iBAAiB,CAACC,SAAS;EAE3C,IAAIT,aAAa,GAAGL,aAAa,CAACC,KAAK,CAAC;EACxC,IAAIc,KAAK,GAAGV,aAAa,CAACU,KAAK;IAC3Bb,KAAK,GAAGG,aAAa,CAACH,KAAK;IAC3BC,QAAQ,GAAGE,aAAa,CAACF,QAAQ;IACjCC,YAAY,GAAGC,aAAa,CAACD,YAAY;IACzCY,MAAM,GAAGX,aAAa,CAACW,MAAM;EACjC,IAAIC,MAAM,GAAGxB,KAAK,CAACyB,OAAO,CAAC,YAAY;IACrC,IAAIC,CAAC,GAAGJ,KAAK,GAAGlB,eAAe,CAACQ,aAAa,EAAED,YAAY,CAAC,GAAGV,UAAU,CAACW,aAAa,EAAEF,QAAQ,EAAEC,YAAY,CAAC;IAChH,OAAO,IAAIgB,MAAM,CAACD,CAAC,CAAC;EACtB,CAAC,EAAE,CAACJ,KAAK,EAAEZ,QAAQ,EAAEC,YAAY,EAAEC,aAAa,CAAC,CAAC;EAClD,IAAIgB,YAAY,GAAGf,gBAAgB,CAACW,MAAM,CAAC;EAC3C,IAAIK,IAAI,GAAG7B,KAAK,CAAC8B,WAAW,CAAC,UAAUC,GAAG,EAAEC,IAAI,EAAE;IAChDD,GAAG,CAACE,SAAS,GAAGxB,KAAK,CAACyB,IAAI;IAC1BH,GAAG,CAACI,WAAW,GAAG1B,KAAK,CAAC2B,MAAM;IAC9BL,GAAG,CAACM,WAAW,GAAG5B,KAAK,CAAC6B,WAAW;IACnCP,GAAG,CAACQ,SAAS,GAAG9B,KAAK,CAAC+B,WAAW;IAEjC,IAAIlB,KAAK,EAAE;MACTS,GAAG,CAACU,SAAS,CAAC,CAAClB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmB,CAAC,KAAK,CAAC,EAAE,CAACnB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoB,CAAC,KAAK,CAAC,CAAC;IACjJ;IAEAZ,GAAG,CAACG,IAAI,CAACF,IAAI,CAAC;IACdD,GAAG,CAACa,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC,EAAE,CAACnC,KAAK,EAAEc,MAAM,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE5B,IAAIuB,iBAAiB,GAAG7C,KAAK,CAAC8B,WAAW,CAAC,UAAUC,GAAG,EAAE;IACvD,IAAIH,YAAY,EAAE;MAChBG,GAAG,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEZ,IAAIN,WAAW,GAAG/B,KAAK,CAAC+B,WAAW,IAAI,CAAC;MACxCT,GAAG,CAACQ,SAAS,GAAGC,WAAW,GAAG,CAAC;MAC/BT,GAAG,CAACgB,wBAAwB,GAAG,iBAAiB;MAChDlB,IAAI,CAACE,GAAG,EAAEH,YAAY,CAAC;MACvBG,GAAG,CAACK,MAAM,CAACR,YAAY,CAAC;MACxBG,GAAG,CAACiB,OAAO,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACnB,IAAI,EAAED,YAAY,EAAEnB,KAAK,CAAC,CAAC;EAC/BT,KAAK,CAACiB,SAAS,CAAC,YAAY;IAC1B,IAAIgC,kBAAkB;IAEtB,IAAIlB,GAAG,GAAG,CAACkB,kBAAkB,GAAG5B,SAAS,CAACH,OAAO,MAAM,IAAI,IAAI+B,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACC,UAAU,CAAC,IAAI,CAAC;IAC3I,IAAI,CAACnB,GAAG,EAAE;IACVc,iBAAiB,CAACd,GAAG,CAAC;IACtBF,IAAI,CAACE,GAAG,EAAEP,MAAM,CAAC;EACnB,CAAC,EAAE,CAACH,SAAS,EAAEQ,IAAI,EAAEP,KAAK,EAAEZ,QAAQ,EAAEC,YAAY,EAAEC,aAAa,EAAEY,MAAM,EAAEqB,iBAAiB,CAAC,CAAC;EAC9F,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}